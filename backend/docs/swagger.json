{
  "openapi": "3.0.0",
  "info": {
    "title": "Web-chat API",
    "description": "API Reference for the Web-chat backend",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:9090",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create a new user",
        "description": "Create a new user with a unique email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "johnDoe@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A JSON with the information of the user created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "johnDoe@email.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Login with a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON with the information of the user logged",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjMzNzQwNjQyfQ.7"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/room": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Get all rooms",
        "description": "Get all chatrooms created by that user",
        "responses": {
          "200": {
            "description": "Return all rooms created by that user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Room 1"
                      },
                      "created_by": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Create a room",
        "description": "Create a new chatroom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Room 1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON with the information of the user logged",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Room 1"
                    },
                    "created_by": {
                      "type": "integer",
                      "example": 2
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2021-09-29T00:00:00.000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2021-09-29T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/room/{id}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Get a room",
        "description": "Get information about a specific room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the room who might be returned",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a room created by that user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Room 1"
                    },
                    "created_by": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Room not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Room"
        ],
        "summary": "Deletes a room",
        "description": "Deletes a chatroom created by that user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the room who might be deleted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room deleted successfully"
          },
          "404": {
            "description": "Room not found"
          }
        }
      }
    },
    "/ws/{id}": {
      "post": {
        "tags": [
          "WebSocket"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the room",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "description": "Token of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Send a message",
        "description": "Send a message in a chat room",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "This is a new message from this user"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "get": {
        "tags": [
          "WebSocket"
        ],
        "summary": "Recive a message in the chat Room",
        "description": "Recives a message in a chat room sent by other client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the room",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "description": "Token of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a message sent by other cliente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "author": {
                      "type": "string",
                      "example": "john Doe"
                    },
                    "message": {
                      "type": "string",
                      "example": "Hi, this is a new message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get messages",
        "description": "Get alls messages from a specific room if query parameters are no providided",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the room who might be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "description": "Number of messages per page",
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all messages from that room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "content": {
                        "type": "string",
                        "example": "Hi, this is a new message"
                      },
                      "created_by": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "room_id": {
                        "type": "string",
                        "example": "1"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2021-09-29T00:00:00.000Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "2021-09-29T00:00:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}